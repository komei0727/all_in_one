name: Deploy Branch CI

on:
  push:
    branches:
      - deploy

env:
  NODE_VERSION: '20.19.2'

permissions:
  contents: read
  deployments: write
  pages: write
  id-token: write

jobs:
  ci:
    name: CI Pipeline for Deploy Branch
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: all_in_one_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate Prisma client
        run: pnpm prisma generate

      - name: Generate Prisma client for tests
        run: pnpm prisma generate --schema=./prisma/schema.test.prisma

      # CI checks
      - name: Type check
        run: pnpm type-check

      - name: Lint check
        run: pnpm lint

      - name: Format check
        run: pnpm format:check

      - name: Run unit tests
        run: pnpm test:unit

      - name: Run integration tests
        run: pnpm test:integration
        env:
          DATABASE_URL: file:./test.db

      # カバレッジレポートの生成
      - name: Run all tests with coverage
        run: pnpm test:coverage
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/all_in_one_test

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 7

      - name: Build check
        run: pnpm build
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/all_in_one_test

      # Vercelデプロイ完了の待機
      - name: Wait for Vercel Deployment
        run: |
          echo "⏳ Waiting for Vercel deployment to complete..."
          echo "⏱️ Waiting 45 seconds for deployment to stabilize..."
          sleep 45
          echo "✅ Deployment wait completed"

      - name: Preview Deploy Summary
        run: |
          echo "🚀 Deploy branch has been updated and deployed to preview environment"
          echo "Preview URL: https://all-in-one-git-deploy-komei0727s-projects.vercel.app"

  # カバレッジレポートをGitHub Pagesにデプロイ
  deploy-coverage:
    name: Deploy Coverage to GitHub Pages
    needs: ci
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download coverage reports
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: ./coverage

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./coverage

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Coverage Deploy Summary
        run: |
          echo "📊 Coverage report deployed to GitHub Pages"
          echo "Coverage URL: ${{ steps.deployment.outputs.page_url }}"
